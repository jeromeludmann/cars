version: '3'

services:
  webpack:
    container_name: webpack
    hostname: webpack
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: npm run watch:webpack
    volumes:
      - ../:/usr/src/cars/:ro
      - /usr/src/cars/node_modules/
      - ../dist/:/usr/src/cars/dist/:rw
    environment:
      - NODE_ENV=development

  rest:
    container_name: rest
    hostname: rest
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: npm run watch:rest
    volumes:
      - ../dist/services/rest.bundle.js:/usr/src/cars/dist/services/rest.bundle.js:ro
    environment:
      - NODE_ENV=development
      - NODE_PORT=3006
    expose:
      - 3006
    links:
      - mongo

  graphql:
    container_name: graphql
    hostname: graphql
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: npm run watch:graphql
    volumes:
      - ../dist/services/graphql.bundle.js:/usr/src/cars/dist/services/graphql.bundle.js:ro
    environment:
      - NODE_ENV=development
      - NODE_PORT=3007
    expose:
      - 3007
    links:
      - mongo

  ssr:
    container_name: ssr
    hostname: ssr
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: npm run watch:ssr
    volumes:
      - ../dist/services/ssr.bundle.js:/usr/src/cars/dist/services/ssr.bundle.js:ro
      - ../src/back/ssr/html.ejs:/usr/src/cars/src/back/ssr/html.ejs:ro
    environment:
      - NODE_ENV=development
      - NODE_PORT=4008
    expose:
      - 4008

  nginx:
    container_name: nginx
    hostname: nginx
    image: nginx:stable
    volumes:
      - ../docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ../dist/assets/:/usr/share/nginx/html/:ro
    environment:
      - NGINX_HOST=cars
      - NGINX_PORT=80
    ports:
      - "8080:80"
    links:
      - rest
      - graphql
      - ssr

  mongo:
    container_name: mongo
    hostname: mongo
    image: mongo:3
    volumes:
      - ../docker/db/:/data/db/:rw
      - ../docker/db-sample.json:/tmp/db-sample.json:ro
